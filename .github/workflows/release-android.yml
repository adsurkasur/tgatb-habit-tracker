name: Release Android App

on:
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your project's Node.js version

      - name: Install dependencies
        run: npm install

      - name: Add Android platform
        run: npx cap add android

      - name: Decode Google Services JSON
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" | base64 --decode > android/app/google-services.json

      - name: Decode Keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/release-key.jks

      - name: Create gradle.properties for signing
        run: |
          echo "storeFile=release-key.jks" >> android/gradle.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/gradle.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/gradle.properties

      - name: Sync Capacitor project
        run: npx cap sync android

      - name: Build Android release with Gradle
        run: ./gradlew assembleRelease
        working-directory: android

      - name: Find APK file
        id: find_apk
        run: |
          APK_PATH=$(find android/app/build/outputs/apk/release/ -name "*.apk" | head -n 1)
          echo "Found APK at: $APK_PATH"
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        if: steps.find_apk.outputs.apk_path != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.find_apk.outputs.apk_path }}
          asset_name: app-release.apk # You might want to make this more dynamic, e.g., app-${{ github.event.release.tag_name }}.apk
          asset_content_type: application/vnd.android.package-archive